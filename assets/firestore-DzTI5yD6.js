import{g as l,l as o,m as r,n as c,o as n,s as i,p as d}from"./index-Bc31RcYh.js";async function m(a){if(!a||!a.email)throw new Error("Invalid user data: email is required");try{await i(o(r,"users",a.email),{first:a.firstName||"",last:a.lastName||"",username:`${a.firstName} ${a.lastName}`||"",email:a.email,born:new Date(`${a.birthYear}-${a.birthMonth}-${a.birthday}`),gender:a.gender||"unknown"},{merge:!0}),console.log("Added Successfully")}catch(t){console.log("Error :",t)}}async function g(a){const t=l();try{const e=o(r,"users",a.email),s=await c(e);s.exists()?(await n(t.currentUser,{displayName:`${s.data().first} ${s.data().last}`}),console.log("### Get User from db ### Successfull!")):console.log("### Get User from db ### User Not Found")}catch(e){console.log("Error!!",e)}}async function u(a,t){try{const e=o(r,"users",a.email);await d(e,{first:t.split(" ")[0],last:t.split(" ")[1]}),console.log("### Updated User Successfull!")}catch(e){console.log("Error!!",e)}}export{m as a,g,u};
